kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: {{ include "ppmservice.fullname" . }}
  labels:
    {{- include "ppmservice.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    deploymentconfig: {{ include "ppmservice.fullname" . }}
    {{- include "ppmservice.selectorLabels" . | nindent 4 }}
  strategy:
    activeDeadlineSeconds: 21600
    resources:
      limits:
        cpu: {{ .Values.deployment.strategy.resources.limits.cpu }}
        memory: {{ .Values.deployment.strategy.resources.limits.memory }}
    rollingParams:
      intervalSeconds: 1
      maxSurge: {{ .Values.deployment.strategy.rollingParams.maxSurge }}
      maxUnavailable: {{ .Values.deployment.strategy.rollingParams.maxUnavailable }}
      timeoutSeconds: {{ .Values.deployment.strategy.rollingParams.timeoutSeconds }}
      updatePeriodSeconds: 1
    type: {{ .Values.deployment.strategy.type }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ppmservice.selectorLabels" . | nindent 8 }}
        deploymentconfig: {{ include "ppmservice.fullname" . }}
    spec:
      automountServiceAccountToken: false
      containers:
        - name: {{ .Values.image.stream }}
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.Application.Port }}
              protocol: TCP
          env:
            {{- range $key, $val := .Values.Application.Environment }}
            - name: {{ $key }}
              value: {{ $val }}
            {{- end }}
            {{- range $key, $configMap := .Values.Application.Configuration }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  key: {{ $key }}
                  name: {{ $configMap }}
            {{- end }}
            {{- range $key, $secret := .Values.Application.Secrets }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secret }}
                  key: {{ $key }}
            {{- end }}                 
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: {{ .Values.Application.Port }}
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 4
          terminationMessagePath: /{{ include "ppmservice.fullname" . }}/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - name: volume-pharmanet-cert
              readOnly: true
              mountPath: /usr/local/pharmanet
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: volume-pharmanet-cert
          configMap:
            name: pharmanet-{{ .Values.OpenShift.Environment }}-cert
            defaultMode: 420
  test: false
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - {{ .Values.image.stream }}
        from:
          kind: ImageStreamTag
          name: {{ .Values.image.stream }}:{{ .Values.OpenShift.Environment }}
          namespace: {{ .Values.OpenShift.ImageProject }}
    - type: ConfigChange
    